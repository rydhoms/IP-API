# .htaccess root public_html
# Enable Rewrite Engine
RewriteEngine On

# Enforce HTTPS
RewriteCond %{HTTPS} off
RewriteRule ^ https://%{HTTP_HOST}%{REQUEST_URI} [L,R=301]

# Redirect CLI tools (wget, curl, etc.) to /v1/api
RewriteCond %{HTTP_USER_AGENT} ^(wget|curl|httpie|http|lynx|aria2|PostmanRuntime|python-requests|Go-http-client|node-fetch|fetch|axios|OpenSSL|PowerShell|Telnet|FTP|rsync|git|nc|libwww-perl) [NC,OR]
RewriteCond %{HTTP_USER_AGENT} ^$ [NC]
RewriteRule ^(.*)$ /v1/api [L]

# Redirect requests with query parameters to /v1/api
RewriteCond %{QUERY_STRING} !^$
RewriteRule ^$ /v1/api [L]

# Redirect requests without query parameters to index.php
RewriteCond %{QUERY_STRING} ^$
RewriteRule ^$ index.php [L]

# Health check endpoint
RewriteRule ^health$ /v1/api [L]

# Block access to sensitive files and directories
<FilesMatch "^(\.htaccess|\.htpasswd|\.env|\.gitignore|\.gitconfig|composer\.lock|package-lock\.json|yarn\.lock|wp-config\.php|config\.php|settings\.py|web\.config|error\.log|access\.log|.*\.bak|.*\.tmp|.*\.swp|.*\.sql|.*\.pem|.*\.key|.*\.crt)$">
    Deny from all
</FilesMatch>

<DirectoryMatch "/(cache|logs|config|vendor|node_modules)">
    Deny from all
</DirectoryMatch>

# Secure Header
<IfModule mod_headers.c>
    # Content Security Policy (CSP) with 'unsafe-inline'
    Header set Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data:; font-src 'self'; frame-ancestors 'none';"

    # X-Content-Type-Options
    Header set X-Content-Type-Options "nosniff"

    # X-Frame-Options
    Header set X-Frame-Options "DENY"

    # X-XSS-Protection
    Header set X-XSS-Protection "1; mode=block"

    # Referrer-Policy
    Header set Referrer-Policy "no-referrer-when-downgrade"

    # Strict-Transport-Security (HSTS)
    Header set Strict-Transport-Security "max-age=31536000; includeSubDomains; preload"

    # Permissions-Policy
    Header set Permissions-Policy "geolocation=(), microphone=(), camera=(), usb=()"

    # Expect-CT
    Header set Expect-CT "enforce, max-age=86400"

    # Cache-Control
    Header set Cache-Control "no-store, no-cache, must-revalidate, max-age=0"

    # CORS
    Header set Access-Control-Allow-Origin "*"
    Header set Access-Control-Allow-Methods "GET"
    Header set Access-Control-Allow-Headers "Content-Type"
</IfModule>

# Gzip compression for text files
<IfModule mod_deflate.c>
    AddOutputFilterByType DEFLATE text/html text/plain text/xml text/css application/javascript application/json
</IfModule>

# Cache static assets for 1 year
<IfModule mod_expires.c>
    ExpiresActive On
    ExpiresByType text/css "access plus 1 year"
    ExpiresByType application/javascript "access plus 1 year"
    ExpiresByType image/jpeg "access plus 1 year"
    ExpiresByType image/png "access plus 1 year"
    ExpiresByType image/gif "access plus 1 year"
    ExpiresByType image/svg+xml "access plus 1 year"
    ExpiresByType font/woff2 "access plus 1 year"
</IfModule>
<FilesMatch "\.(css|js|jpg|jpeg|png|gif|svg|woff2)$">
    <IfModule mod_headers.c>
        Header set Cache-Control "max-age=31536000, public"
    </IfModule>
</FilesMatch>

# Disable ETag
<IfModule mod_headers.c>
    Header unset ETag
</IfModule>
FileETag None

# Enable Keep-Alive
<IfModule mod_headers.c>
    Header set Connection keep-alive
</IfModule>

# Redirect trailing slashes
RewriteCond %{REQUEST_FILENAME} !-d
RewriteRule ^(.+)/$ /$1 [R=301,L]
